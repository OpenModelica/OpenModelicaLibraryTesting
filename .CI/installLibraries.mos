updatePackageIndex();
if not installPackage(Modelica, "3.1.0", exactMatch=true) then
    print("Modelica 3.1.0 " + getErrorString() + "\n");
    exit(1);
end if;
for v in {"3.2.1","3.2.2","3.2.3","4.0.0","trunk"} loop
  if not installPackage(ModelicaTest, v, exactMatch=true) then
    print("ModelicaTest " + v + " " + getErrorString() + "\n");
    exit(1);
  end if;
end for;
for v in {"1.6", "3.0.0", "7.0.0", "master"} loop
  if not installPackage(Buildings, v) then
    print("Buildings " + v + " " + getErrorString() + "\n");
    exit(1);
  end if;
end for;

// "KeyWordIO" master? Fixa master+X.X som version

for lib in {"AdvancedNoise", "AixLib", "BioChem", "BuildingSystems", "BuildSysPro", "Chemical", "ClaRa_Obsolete", "ClaRa", "ConPNlib", "ElectricalEnergyStorage", "ExternData", "ExternalMemoryLib", "FastBuildings", "FCSys", "HanserModelica", "HelmholtzMedia", "IBPSA", "IdealizedContact", "IndustrialControlSystems", "KeyWordIO", "LibRAS", "MEV", "MessagePack", "ModelicaByExample", "ModelicaTestOverdetermined", "Modelica_Synchronous", "Modelica_DeviceDrivers", "Modelica_LinearSystems2", "Modelica_Noise", "ObjectStab", "OpenHydraulics", "OpenIPSL", "PhotoVoltaics", "PhotoVoltaics_TGM", "PNlib", "Physiolibrary", "PlanarMechanics", "PowerGrids", "PowerSysPro", "ScalableTestGrids", "ScalableTestSuite", "SolarTherm", "Spot", "SystemDynamics", "TAeZoSysPro", "TAeZoSysPro_testsuite", "ThermalSeparation", "ThermoPower", "ThermoSysPro", "TILMedia", "VehicleInterfaces"} loop
  if not installPackage(stringTypeName(lib), "master") then
    print(lib + " " + getErrorString() + "\n");
    exit(1);
  end if;
end for;

for l in {{"AES", "main"}, {"Annex60", ""}, {"ExtendedPetriNets", ""}, {"iPSL", ""}, {"PowerSystems","master"}, {"PowerSystems",""}, {"SiemensPower",""}, {"SiemensPower","OMCtest"}, {"Modelica_StateGraph2", ""}, {"OpenIPSL", ""}, {"Physiomodel", ""}, {"ThermofluidStream", "main"}, {"ThermofluidStream", "0.2.0-OM_adaptions"}} loop
  if not installPackage(stringTypeName(l[1]), l[2]) then
    print(l[1] + " " + l[2] + getErrorString() + "\n");
    exit(1);
  end if;
end for;

print("Did install:" + getErrorString() + "\n");

if not upgradeInstalledPackages() then
  print("Failed upgrade:\n" + getErrorString() + "\n");
  exit(1);
end if;

print("Did upgrade:\n" + getErrorString() + "\n");
