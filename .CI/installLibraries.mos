// adrpo: DO NOT REMOVE ANY LIBS FROM HERE BEFORE REMOVING THEM FROM configs/conf*
//        usually the newest version will be loaded instead if you remove them!
//        SO: first remove them from configs/conf* then remove them from here.
updatePackageIndex();
if not installPackage(Modelica, "4.1.0-beta.om", exactMatch=true) then
    print("Modelica 4.1.0-beta.om" + getErrorString() + "\n");
    exit(1);
end if;
if not installPackage(ModelicaServices, "4.1.0-beta.om", exactMatch=true) then
    print("ModelicaServices 4.1.0-beta.om" + getErrorString() + "\n");
    exit(1);
end if;
if not installPackage(ModelicaServices, "trunk", exactMatch=true) then
    print("ModelicaServices trunk" + getErrorString() + "\n");
    exit(1);
end if;
for v in {"3.2.3","4.1.0-beta.om"} loop
  if not installPackage(ModelicaTest, v, exactMatch=true) then
    print("ModelicaTest " + v + " " + getErrorString() + "\n");
    exit(1);
  end if;
end for;
for v in {"maint.11.x", "maint.12.x", "master"} loop
  if not installPackage(Buildings, v) then
    print("Buildings " + v + " " + getErrorString() + "\n");
    exit(1);
  end if;
end for;

for lib in {"AdvancedNoise", "BioChem", "BuildingSystems", "BuildSysPro", "Chemical", "ConPNlib", "ElectricalEnergyStorage", "ExternData", "ExternalMemoryLib", "FastBuildings", "FCSys", "Greenhouses", "HanserModelica", "HelmholtzMedia", "IBPSA", "IdealizedContact", "IndustrialControlSystems", "KeyWordIO", "LargeTestSuite", "LibRAS", "MEV", "MessagePack", "ModelicaByExample", "ModelicaTestOverdetermined", "Modelica_Synchronous", "Modelica_DeviceDrivers", "Modelica_LinearSystems2", "Modelica_Noise", "ObjectStab", "OpenHydraulics", "OpenIPSL", "PNlib", "Physiolibrary", "PlanarMechanics", "PowerSysPro", "ScalableTestGrids", "ScalableTestSuite", "SolarTherm", "Spot", "SystemDynamics", "TAeZoSysPro", "TAeZoSysPro_testsuite", "ThermalSeparation", "ThermoPower", "ThermoSysPro", "TransiEnt", "VehicleInterfaces"} loop
  if not installPackage(stringTypeName(lib), "master") then
    print(lib + " " + getErrorString() + "\n");
    exit(1);
  end if;
end for;

for l in {
  {"AES", "main"},
  {"AixLib", "main"},
  {"Annex60", ""},
  {"BidiDCDC", ""},
  {"BLDC", ""},
  {"BoundaryInitBlocks", "master"},
  {"BusinessSimulation", ""},
  {"BusinessSimulation", "main"},
  {"Credibility", ""},
  {"DeltaRobot", ""},
  {"DroneLibrary", ""},
  {"Dynawo", ""},
  {"Dynawo", "master"},
  {"EHPTexamples", ""},
  {"EHPTexamples", "main"},
  {"EHPTlib", ""},
  {"EHPTlib", "main"},
  {"ExtendedPetriNets", ""},
  {"ExternalMedia",""},
  {"FluxTubesExtension","main"},
  {"IDEAS", ""},
  {"IDEAS", "master"},
  {"iPSL", ""},
  {"MagLev", ""},
  {"OpenIMDML", "main"},
  {"OpenIPSL", "2.0.0"},
  {"OpenIPSL", ""},
  {"OpenIPSL", "master"},
  {"PhotoVoltaics", ""},
  {"PhotoVoltaics_TGM", ""},
  {"PowerSystems","master"},
  {"PowerSystems",""},
  {"PowerGrids",""},
  {"PowerGrids","develop"},
  {"SiemensPower",""},
  {"SiemensPower","OMCtest"},
  {"StewartPlatform",""},
  {"SOFCPoliMi","master"},
  {"Modelica_LinearSystems2", "dev"},
  {"Modelica_StateGraph2", ""},
  {"Physiomodel", ""},
  {"ThermofluidStream", ""},
  {"ThermofluidStream", "main"},
  {"TILMedia", "main"},
  {"ClaRa", ""},
  {"ClaRa", "main"}
} loop
  if not installPackage(stringTypeName(l[1]), l[2]) then
    print(l[1] + " " + l[2] + getErrorString() + "\n");
    exit(1);
  end if;
end for;

print("Did install:" + getErrorString() + "\n");

/* do not upgrade as it will reinstall libs!
if not upgradeInstalledPackages() then
  print("Failed upgrade:\n" + getErrorString() + "\n");
  exit(1);
end if;

print("Did upgrade:\n" + getErrorString() + "\n");
*/